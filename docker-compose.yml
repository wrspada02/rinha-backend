version: '3.5'
services:
  api1: # API - Instância 01
    image: wrspada02/rinha-backend
    container_name: api1
    env_file: .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    hostname: ${API_HOST}
    networks:
      - app-network
    depends_on:
      - db
    expose:
      - "80"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  api2: # API - Instância 02
    image: wrspada02/rinha-backend
    container_name: api2
    env_file: .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    hostname: ${API_HOST}
    networks:
      - app-network
    depends_on:
      - db
    expose:
      - "80"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    container_name: nginx
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  db: # Banco de dados
    image: postgres
    container_name: db
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    hostname: ${POSTGRES_HOST}
    networks:
      - app-network
    volumes:
      - ./src/database/person.sql:/docker-entrypoint-initdb.d/person.sql
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1.5GB'

networks:
  app-network:
    driver: bridge